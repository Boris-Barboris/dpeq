29.03.2018:  v0.3.0 -> v0.4.0
    Breaking changes:
    - marshalling renamed to serialization library-wide.
    - connection timeout is now part of Socket constructor contract.
    - most functions marked @safe pure with rare exceptions. Socket templates
        may require @trusted handicaps.
    - serializers marked nothrow.
    - StmtOrPortal enum members are now lowercase.
    - Message backing byte array is marked immutable(ubyte)[].
    - Serialization functions switched to pointers from references.
    - RowBlock.dataRows are no longer Messages, but immutable byte arrays.
    - Calling methods on conirmed-closed connection now does not throw, but asserts.
    - notificationCallback and noticeCallback marked @safe.
    - InterceptorT marked @safe.
    - TransactionStatus enum members are now lowercase.
    - commandsComplete field of RowBlock and QueryResult structs removed.

    Functionality:
    - command tag parsing from CommandComplete message. commandTag is a string
        field of RowBlock struct.
    - RowBlock has new field 'state', wich indicates how it was finalized.
    - connection timeout added to constructor (but not used with default socket).
    - fixed discard - expectedrfq counter relationship.
    - most put... connection methods now discard written data if they throw.
    - additional putBindMessage overloads.
    - new putQueryMessage overload for array of strings wich are effectively
        concatenated.
    - ObjectID renamed to OID, but alias is still there.

10.03.2018:  v0.2.0 -> v0.3.0
    Breaking changes:
    - mark most methods final.
    - change parameter order in PreparedStatement constructor to better reflect
        common cases.
    - struct QueryResult moved to dpeq.schema file.
    - removed delayedPoll functionality. Pushdown automaton is now on the
        client code.
    - most lazy parameters changed to in\const.

    Functionality:
    - convenience Portal.bind for parameterless case.
    - convenience all-text Portal.bind overload for nullable-string-only parameters.
    - detection of suspended portals.
    - getOneRowBlock function, wich polls connection until all rows from one
        Execute have been materialized (or row limit reached).
    - PsqlMarshallingException as PsqlClientException derivative for marshalling
        errors.
    - Unix-domain socket support for stock StdSocket.
    - allocation batching for small response messages.
    - transaction status exposed as transactionStatus property of connection.
    - query cancellation mechanism (cancelRequest method of connection object).
    - putBindMessage overload for parameterless portals.
    - notificationCallback wich implements receivement of PSQL "notify" message passing.
    - noticeCallback to observe backend notices.
    - proper NoticeResponse\ErrorResponse demarshalling. Notice member included in
        ErrorResponseException.

13.01.2018:  v0.1.1 -> v0.2.0
    Breaking changes:
    - blockToVariants return type changed to NullableVariant - dpeq-defined subtype of std.variant.Variant
    - Portal constructor parameter 'paramCount' moved to PreparedStatement constructor

    Various bugfixes and additional definitions, made well before an idea to
    start this changelog file.